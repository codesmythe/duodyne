Module: M:\Development\Vintage\8088 stuff\sbc-188\BIOS045\m8563lib.c
GROUP: 'DGROUP' CONST,CONST2,_DATA

File contains no line numbers.
Segment: _TEXT BYTE USE16 0000064C bytes
0000                          PixAddrMode3_:
0000    51                        push        cx 
0001    88 C1                     mov         cl,al 
0003    88 D8                     mov         al,bl 
0005    30 E4                     xor         ah,ah 
0007    89 C3                     mov         bx,ax 
0009    C1 E3 0C                  shl         bx,0x0c 
000C    88 D0                     mov         al,dl 
000E    6B C0 50                  imul        ax,0x0050 
0011    89 DA                     mov         dx,bx 
0013    01 C2                     add         dx,ax 
0015    88 C8                     mov         al,cl 
0017    30 E4                     xor         ah,ah 
0019    01 D0                     add         ax,dx 
001B    59                        pop         cx 
001C    C3                        ret         

Routine Size: 29 bytes,    Routine Base: _TEXT + 0000

001D                          @put_mem:
001D    89 C3                     mov         bx,ax 
001F    88 D1                     mov         cl,dl 
0021    C1 E8 08                  shr         ax,0x08 
0024    30 E4                     xor         ah,ah 
0026    89 C2                     mov         dx,ax 
0028    B8 12 00                  mov         ax,0x0012 
002B    E8 00 00                  call        M8563Put_ 
002E    88 D8                     mov         al,bl 
0030    30 E4                     xor         ah,ah 
0032    89 C2                     mov         dx,ax 
0034    B8 13 00                  mov         ax,0x0013 
0037    E8 00 00                  call        M8563Put_ 
003A    88 CB                     mov         bl,cl 
003C    30 FF                     xor         bh,bh 
003E    89 DA                     mov         dx,bx 
0040    B8 1F 00                  mov         ax,0x001f 

Routine Size: 38 bytes,    Routine Base: _TEXT + 001D

0043                          M8563Put_:
0043    53                        push        bx 
0044    51                        push        cx 
0045    56                        push        si 
0046    57                        push        di 
0047    C8 04 00 00               enter       0x0004,0x00 
004B    88 46 FC                  mov         byte ptr -0x4[bp],al 
004E    88 56 FE                  mov         byte ptr -0x2[bp],dl 
0051                          L$1:
0051    BA E4 04                  mov         dx,0x04e4 
0054    EC                        in          al,dx 
0055    0A C0                     or          al,al 
0057    79 F8                     jns         L$1 
0059    BA E4 04                  mov         dx,0x04e4 
005C    8A 86 FC FF               mov         al,byte ptr -0x4[bp] 
0060    EE                        out         dx,al 
0061                          L$2:
0061    BA E4 04                  mov         dx,0x04e4 
0064    EC                        in          al,dx 
0065    0A C0                     or          al,al 
0067    79 F8                     jns         L$2 
0069    8A 86 FE FF               mov         al,byte ptr -0x2[bp] 
006D    BA EC 04                  mov         dx,0x04ec 
0070    EE                        out         dx,al 
0071    C9                        leave       
0072    5F                        pop         di 
0073    5E                        pop         si 
0074    59                        pop         cx 
0075    5B                        pop         bx 
0076    C3                        ret         

Routine Size: 52 bytes,    Routine Base: _TEXT + 0043

0077                          @get_mem:
0077    89 C3                     mov         bx,ax 
0079    C1 E8 08                  shr         ax,0x08 
007C    30 E4                     xor         ah,ah 
007E    89 C2                     mov         dx,ax 
0080    B8 12 00                  mov         ax,0x0012 
0083    E8 00 00                  call        M8563Put_ 
0086    88 D8                     mov         al,bl 
0088    30 E4                     xor         ah,ah 
008A    89 C2                     mov         dx,ax 
008C    B8 13 00                  mov         ax,0x0013 
008F    E8 00 00                  call        M8563Put_ 
0092    B8 1F 00                  mov         ax,0x001f 

Routine Size: 30 bytes,    Routine Base: _TEXT + 0077

0095                          M8563Get_:
0095    53                        push        bx 
0096    51                        push        cx 
0097    52                        push        dx 
0098    56                        push        si 
0099    57                        push        di 
009A    C8 02 00 00               enter       0x0002,0x00 
009E    88 46 FE                  mov         byte ptr -0x2[bp],al 
00A1                          L$3:
00A1    BA E4 04                  mov         dx,0x04e4 
00A4    EC                        in          al,dx 
00A5    0A C0                     or          al,al 
00A7    79 F8                     jns         L$3 
00A9    BA E4 04                  mov         dx,0x04e4 
00AC    8A 86 FE FF               mov         al,byte ptr -0x2[bp] 
00B0    EE                        out         dx,al 
00B1                          L$4:
00B1    BA E4 04                  mov         dx,0x04e4 
00B4    EC                        in          al,dx 
00B5    0A C0                     or          al,al 
00B7    79 F8                     jns         L$4 
00B9    BA EC 04                  mov         dx,0x04ec 
00BC    EC                        in          al,dx 
00BD    88 86 FE FF               mov         byte ptr -0x2[bp],al 
00C1    8A 46 FE                  mov         al,byte ptr -0x2[bp] 
00C4    C9                        leave       
00C5    5F                        pop         di 
00C6                          L$5:
00C6    5E                        pop         si 
00C7                          L$6:
00C7    5A                        pop         dx 
00C8    59                        pop         cx 
00C9    5B                        pop         bx 
00CA    C3                        ret         

Routine Size: 54 bytes,    Routine Base: _TEXT + 0095

00CB                          Scroll8563_:
00CB    56                        push        si 
00CC    57                        push        di 
00CD    C8 0C 00 00               enter       0x000c,0x00 
00D1    89 C6                     mov         si,ax 
00D3    C1 EE 08                  shr         si,0x08 
00D6    89 76 F4                  mov         word ptr -0xc[bp],si 
00D9    30 E4                     xor         ah,ah 
00DB    89 C7                     mov         di,ax 
00DD    89 C8                     mov         ax,cx 
00DF    C1 E8 08                  shr         ax,0x08 
00E2    89 46 F8                  mov         word ptr -0x8[bp],ax 
00E5    30 ED                     xor         ch,ch 
00E7    89 C8                     mov         ax,cx 
00E9    89 D1                     mov         cx,dx 
00EB    C1 E9 08                  shr         cx,0x08 
00EE    30 F6                     xor         dh,dh 
00F0    C1 EB 08                  shr         bx,0x08 
00F3    89 5E F6                  mov         word ptr -0xa[bp],bx 
00F6    89 D6                     mov         si,dx 
00F8    29 C6                     sub         si,ax 
00FA    46                        inc         si 
00FB    89 CA                     mov         dx,cx 
00FD    2B 56 F8                  sub         dx,word ptr -0x8[bp] 
0100    42                        inc         dx 
0101    85 FF                     test        di,di 
0103    75 05                     jne         L$7 
0105    89 56 FE                  mov         word ptr -0x2[bp],dx 
0108    EB 07                     jmp         L$8 
010A                          L$7:
010A    89 7E FE                  mov         word ptr -0x2[bp],di 
010D    29 FA                     sub         dx,di 
010F    89 D7                     mov         di,dx 
0111                          L$8:
0111    83 7E F6 00               cmp         word ptr -0xa[bp],0x0000 
0115    74 06                     je          L$9 
0117    B8 01 00                  mov         ax,0x0001 
011A    E9 8A 00                  jmp         L$14 
011D                          L$9:
011D    83 7E F4 06               cmp         word ptr -0xc[bp],0x0006 
0121    75 15                     jne         L$10 
0123    8A 56 F8                  mov         dl,byte ptr -0x8[bp] 
0126    30 F6                     xor         dh,dh 
0128    30 E4                     xor         ah,ah 
012A    31 DB                     xor         bx,bx 
012C    E8 00 00                  call        PixAddrMode3_ 
012F    89 C1                     mov         cx,ax 
0131    C7 46 FC 50 00            mov         word ptr -0x4[bp],0x0050 
0136    EB 12                     jmp         L$11 
0138                          L$10:
0138    88 CA                     mov         dl,cl 
013A    30 F6                     xor         dh,dh 
013C    30 E4                     xor         ah,ah 
013E    31 DB                     xor         bx,bx 
0140    E8 00 00                  call        PixAddrMode3_ 
0143    89 C1                     mov         cx,ax 
0145    C7 46 FC B0 FF            mov         word ptr -0x4[bp],0xffb0 
014A                          L$11:
014A    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
014D    F7 6E FE                  imul        word ptr -0x2[bp] 
0150    89 CA                     mov         dx,cx 
0152    01 C2                     add         dx,ax 
0154    89 56 FA                  mov         word ptr -0x6[bp],dx 
0157                          L$12:
0157    85 FF                     test        di,di 
0159    74 26                     je          L$13 
015B    89 F3                     mov         bx,si 
015D    8B 56 FA                  mov         dx,word ptr -0x6[bp] 
0160    89 C8                     mov         ax,cx 
0162    E8 00 00                  call        CopyMemory_ 
0165    8B 56 FA                  mov         dx,word ptr -0x6[bp] 
0168    80 C6 08                  add         dh,0x08 
016B    89 C8                     mov         ax,cx 
016D    80 C4 08                  add         ah,0x08 
0170    89 F3                     mov         bx,si 
0172    E8 00 00                  call        CopyMemory_ 
0175    03 4E FC                  add         cx,word ptr -0x4[bp] 
0178    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
017B    01 46 FA                  add         word ptr -0x6[bp],ax 
017E    4F                        dec         di 
017F    EB D6                     jmp         L$12 
0181                          L$13:
0181    8B 46 FE                  mov         ax,word ptr -0x2[bp] 
0184    85 C0                     test        ax,ax 
0186    74 1F                     je          L$14 
0188    BB 20 00                  mov         bx,0x0020 
018B    89 F2                     mov         dx,si 
018D    89 C8                     mov         ax,cx 
018F    E8 00 00                  call        FillMemory_ 
0192    89 C8                     mov         ax,cx 
0194    80 C4 08                  add         ah,0x08 
0197    BB 0E 00                  mov         bx,0x000e 
019A    89 F2                     mov         dx,si 
019C    E8 00 00                  call        FillMemory_ 
019F    03 4E FC                  add         cx,word ptr -0x4[bp] 
01A2    FF 4E FE                  dec         word ptr -0x2[bp] 
01A5    EB DA                     jmp         L$13 
01A7                          L$14:
01A7    C9                        leave       
01A8    5F                        pop         di 
01A9                          L$15:
01A9    5E                        pop         si 
01AA    C3                        ret         

Routine Size: 224 bytes,    Routine Base: _TEXT + 00CB

01AB                          LoadScreen_:
01AB    53                        push        bx 
01AC    52                        push        dx 
01AD    31 D2                     xor         dx,dx 
01AF    B8 12 00                  mov         ax,0x0012 
01B2    E8 00 00                  call        M8563Put_ 
01B5    31 D2                     xor         dx,dx 
01B7    B8 13 00                  mov         ax,0x0013 
01BA    E8 00 00                  call        M8563Put_ 
01BD    31 DB                     xor         bx,bx 
01BF                          L$16:
01BF    88 D8                     mov         al,bl 
01C1    30 E4                     xor         ah,ah 
01C3    89 C2                     mov         dx,ax 
01C5    B8 1F 00                  mov         ax,0x001f 
01C8    E8 00 00                  call        M8563Put_ 
01CB    43                        inc         bx 
01CC    81 FB FF 07               cmp         bx,0x07ff 
01D0    7C ED                     jl          L$16 
01D2    5A                        pop         dx 
01D3    5B                        pop         bx 
01D4    C3                        ret         

Routine Size: 42 bytes,    Routine Base: _TEXT + 01AB

01D5                          SetScreenAttrib_:
01D5    53                        push        bx 
01D6    51                        push        cx 
01D7    52                        push        dx 
01D8    56                        push        si 
01D9    BA 08 00                  mov         dx,0x0008 
01DC    B8 12 00                  mov         ax,0x0012 
01DF    E8 00 00                  call        M8563Put_ 
01E2    31 D2                     xor         dx,dx 
01E4    B8 13 00                  mov         ax,0x0013 
01E7    E8 00 00                  call        M8563Put_ 
01EA    31 DB                     xor         bx,bx 
01EC    31 C9                     xor         cx,cx 
01EE    31 F6                     xor         si,si 
01F0    EB 16                     jmp         L$18 
01F2                          L$17:
01F2    88 DA                     mov         dl,bl 
01F4    30 F6                     xor         dh,dh 
01F6    B8 1F 00                  mov         ax,0x001f 
01F9    E8 00 00                  call        M8563Put_ 
01FC    46                        inc         si 
01FD    41                        inc         cx 
01FE    43                        inc         bx 
01FF    81 FE FF 07               cmp         si,0x07ff 
0203    7C 03                     jl          L$18 
0205    E9 BE FE                  jmp         L$5 
0208                          L$18:
0208    83 E3 0F                  and         bx,0x000f 
020B    85 DB                     test        bx,bx 
020D    75 04                     jne         L$19 
020F    41                        inc         cx 
0210    BB 01 00                  mov         bx,0x0001 
0213                          L$19:
0213    F6 C5 01                  test        ch,0x01 
0216    74 DA                     je          L$17 
0218    80 CB 80                  or          bl,0x80 
021B    EB D5                     jmp         L$17 

Routine Size: 72 bytes,    Routine Base: _TEXT + 01D5

021D                          @millisecond:
021D    56                        push        si 
021E    89 C6                     mov         si,ax 
0220                          L$20:
0220    4E                        dec         si 
0221    83 FE FF                  cmp         si,0xffff 
0224    74 83                     je          L$15 
0226    B8 E8 03                  mov         ax,0x03e8 
0229    E8 00 00                  call        @microsecond 
022C    EB F2                     jmp         L$20 

Routine Size: 17 bytes,    Routine Base: _TEXT + 021D

022E                          Init8563_:
022E    53                        push        bx 
022F    51                        push        cx 
0230    52                        push        dx 
0231    56                        push        si 
0232    C8 02 00 00               enter       0x0002,0x00 
0236    88 46 FE                  mov         byte ptr -0x2[bp],al 
0239    31 DB                     xor         bx,bx 
023B                          L$21:
023B    8A 8F 00 00               mov         cl,byte ptr _M8563init[bx] 
023F    43                        inc         bx 
0240    8A 87 00 00               mov         al,byte ptr _M8563init[bx] 
0244    30 E4                     xor         ah,ah 
0246    89 C2                     mov         dx,ax 
0248    88 C8                     mov         al,cl 
024A    43                        inc         bx 
024B    E8 00 00                  call        M8563Put_ 
024E    83 FB 3A                  cmp         bx,0x003a 
0251    72 E8                     jb          L$21 
0253    BE 40 00                  mov         si,0x0040 
0256    31 D2                     xor         dx,dx 
0258    31 C0                     xor         ax,ax 
025A    E8 00 00                  call        @put_mem 
025D    BA 5A 00                  mov         dx,0x005a 
0260    B8 00 01                  mov         ax,0x0100 
0263    E8 00 00                  call        @put_mem 
0266    31 C0                     xor         ax,ax 
0268    E8 00 00                  call        @get_mem 
026B    84 C0                     test        al,al 
026D    74 08                     je          L$22 
026F    BE 10 00                  mov         si,0x0010 
0272    89 F0                     mov         ax,si 
0274    E8 00 00                  call        SetMemSize8563_ 
0277                          L$22:
0277    31 DB                     xor         bx,bx 
0279    BA 00 10                  mov         dx,0x1000 
027C    31 C0                     xor         ax,ax 
027E    E8 00 00                  call        FillMemory_ 
0281    E8 00 00                  call        LoadFont_ 
0284    E8 00 00                  call        SetScreenAttrib_ 
0287    E8 00 00                  call        LoadScreen_ 
028A    B8 E8 03                  mov         ax,0x03e8 
028D    E8 00 00                  call        @millisecond 
0290    F6 46 FE 80               test        byte ptr -0x2[bp],0x80 
0294    75 0B                     jne         L$23 
0296    BB 20 00                  mov         bx,0x0020 
0299    BA D0 07                  mov         dx,0x07d0 
029C    31 C0                     xor         ax,ax 
029E    E8 00 00                  call        FillMemory_ 
02A1                          L$23:
02A1    89 F0                     mov         ax,si 
02A3    C9                        leave       
02A4    E9 1F FE                  jmp         L$5 

Routine Size: 121 bytes,    Routine Base: _TEXT + 022E

02A7                          LoadFont_:
02A7    53                        push        bx 
02A8    51                        push        cx 
02A9    52                        push        dx 
02AA    56                        push        si 
02AB    BA 20 00                  mov         dx,0x0020 
02AE    B8 12 00                  mov         ax,0x0012 
02B1    E8 00 00                  call        M8563Put_ 
02B4    31 D2                     xor         dx,dx 
02B6    B8 13 00                  mov         ax,0x0013 
02B9    E8 00 00                  call        M8563Put_ 
02BC    31 DB                     xor         bx,bx 
02BE                          L$24:
02BE    C4 36 00 00               les         si,dword ptr _Font 
02C2    01 DE                     add         si,bx 
02C4    26 8A 14                  mov         dl,byte ptr es:[si] 
02C7    30 F6                     xor         dh,dh 
02C9    B8 1F 00                  mov         ax,0x001f 
02CC    E8 00 00                  call        M8563Put_ 
02CF    43                        inc         bx 
02D0    81 FB 00 10               cmp         bx,0x1000 
02D4    7C E8                     jl          L$24 
02D6    31 DB                     xor         bx,bx 
02D8    EB 0A                     jmp         L$26 
02DA                          L$25:
02DA    43                        inc         bx 
02DB    81 FB 00 01               cmp         bx,0x0100 
02DF    7C 03                     jl          L$26 
02E1    E9 E2 FD                  jmp         L$5 
02E4                          L$26:
02E4    31 C9                     xor         cx,cx 
02E6                          L$27:
02E6    89 DE                     mov         si,bx 
02E8    C1 E6 03                  shl         si,0x03 
02EB    01 CE                     add         si,cx 
02ED    C4 06 00 00               les         ax,dword ptr _Font 
02F1    01 C6                     add         si,ax 
02F3    26 8A 94 00 10            mov         dl,byte ptr es:0x1000[si] 
02F8    30 F6                     xor         dh,dh 
02FA    B8 1F 00                  mov         ax,0x001f 
02FD    E8 00 00                  call        M8563Put_ 
0300    41                        inc         cx 
0301    83 F9 08                  cmp         cx,0x0008 
0304    7C E0                     jl          L$27 
0306                          L$28:
0306    83 F9 10                  cmp         cx,0x0010 
0309    7D CF                     jge         L$25 
030B    31 D2                     xor         dx,dx 
030D    B8 1F 00                  mov         ax,0x001f 
0310    E8 00 00                  call        M8563Put_ 
0313    41                        inc         cx 
0314    EB F0                     jmp         L$28 

Routine Size: 111 bytes,    Routine Base: _TEXT + 02A7

0316                          FillMemory_:
0316    51                        push        cx 
0317    C8 04 00 00               enter       0x0004,0x00 
031B    50                        push        ax 
031C    89 D1                     mov         cx,dx 
031E    88 5E FE                  mov         byte ptr -0x2[bp],bl 
0321    B8 18 00                  mov         ax,0x0018 
0324    E8 00 00                  call        M8563Get_ 
0327    88 46 FC                  mov         byte ptr -0x4[bp],al 
032A    8B 56 FA                  mov         dx,word ptr -0x6[bp] 
032D    C1 EA 08                  shr         dx,0x08 
0330    88 D3                     mov         bl,dl 
0332    30 FF                     xor         bh,bh 
0334    89 DA                     mov         dx,bx 
0336    B8 12 00                  mov         ax,0x0012 
0339    E8 00 00                  call        M8563Put_ 
033C    8A 56 FA                  mov         dl,byte ptr -0x6[bp] 
033F    30 F6                     xor         dh,dh 
0341    B8 13 00                  mov         ax,0x0013 
0344    E8 00 00                  call        M8563Put_ 
0347    8A 5E FE                  mov         bl,byte ptr -0x2[bp] 
034A    89 DA                     mov         dx,bx 
034C    B8 1F 00                  mov         ax,0x001f 
034F    E8 00 00                  call        M8563Put_ 
0352    8A 56 FC                  mov         dl,byte ptr -0x4[bp] 
0355    80 E2 7F                  and         dl,0x7f 
0358    30 F6                     xor         dh,dh 
035A    49                        dec         cx 
035B    B8 18 00                  mov         ax,0x0018 
035E    E8 00 00                  call        M8563Put_ 
0361                          L$29:
0361    81 F9 FF 00               cmp         cx,0x00ff 
0365    76 05                     jbe         L$30 
0367    BB FF 00                  mov         bx,0x00ff 
036A    EB 02                     jmp         L$31 
036C                          L$30:
036C    89 CB                     mov         bx,cx 
036E                          L$31:
036E    89 DA                     mov         dx,bx 
0370    30 FE                     xor         dh,bh 
0372    B8 1E 00                  mov         ax,0x001e 
0375    E8 00 00                  call        M8563Put_ 
0378    29 D9                     sub         cx,bx 
037A    75 E5                     jne         L$29 
037C    C9                        leave       
037D    59                        pop         cx 
037E    C3                        ret         

Routine Size: 105 bytes,    Routine Base: _TEXT + 0316

037F                          CopyMemory_:
037F    51                        push        cx 
0380    C8 02 00 00               enter       0x0002,0x00 
0384    50                        push        ax 
0385    89 D1                     mov         cx,dx 
0387    B8 18 00                  mov         ax,0x0018 
038A    E8 00 00                  call        M8563Get_ 
038D    88 46 FE                  mov         byte ptr -0x2[bp],al 
0390    8B 46 FC                  mov         ax,word ptr -0x4[bp] 
0393    C1 E8 08                  shr         ax,0x08 
0396    30 E4                     xor         ah,ah 
0398    89 C2                     mov         dx,ax 
039A    B8 12 00                  mov         ax,0x0012 
039D    E8 00 00                  call        M8563Put_ 
03A0    8A 46 FC                  mov         al,byte ptr -0x4[bp] 
03A3    30 E4                     xor         ah,ah 
03A5    89 C2                     mov         dx,ax 
03A7    B8 13 00                  mov         ax,0x0013 
03AA    E8 00 00                  call        M8563Put_ 
03AD    89 C8                     mov         ax,cx 
03AF    C1 E8 08                  shr         ax,0x08 
03B2    30 E4                     xor         ah,ah 
03B4    89 C2                     mov         dx,ax 
03B6    B8 20 00                  mov         ax,0x0020 
03B9    E8 00 00                  call        M8563Put_ 
03BC    88 C8                     mov         al,cl 
03BE    30 E4                     xor         ah,ah 
03C0    89 C2                     mov         dx,ax 
03C2    B8 21 00                  mov         ax,0x0021 
03C5    E8 00 00                  call        M8563Put_ 
03C8    8A 4E FE                  mov         cl,byte ptr -0x2[bp] 
03CB    80 C9 80                  or          cl,0x80 
03CE    30 ED                     xor         ch,ch 
03D0    89 CA                     mov         dx,cx 
03D2    B8 18 00                  mov         ax,0x0018 
03D5    E8 00 00                  call        M8563Put_ 
03D8                          L$32:
03D8    81 FB FF 00               cmp         bx,0x00ff 
03DC    76 05                     jbe         L$33 
03DE    B9 FF 00                  mov         cx,0x00ff 
03E1    EB 02                     jmp         L$34 
03E3                          L$33:
03E3    89 D9                     mov         cx,bx 
03E5                          L$34:
03E5    89 CA                     mov         dx,cx 
03E7    30 EE                     xor         dh,ch 
03E9    B8 1E 00                  mov         ax,0x001e 
03EC    E8 00 00                  call        M8563Put_ 
03EF    29 CB                     sub         bx,cx 
03F1    75 E5                     jne         L$32 
03F3    C9                        leave       
03F4    59                        pop         cx 
03F5    C3                        ret         

Routine Size: 119 bytes,    Routine Base: _TEXT + 037F

03F6                          amap_:
03F6    88 C4                     mov         ah,al 
03F8    D0 E4                     shl         ah,0x01 
03FA    A8 08                     test        al,0x08 
03FC    74 02                     je          L$35 
03FE    FE C4                     inc         ah 
0400                          L$35:
0400    88 E0                     mov         al,ah 
0402    24 0F                     and         al,0x0f 
0404    C3                        ret         

Routine Size: 15 bytes,    Routine Base: _TEXT + 03F6

0405                          umap_:
0405    52                        push        dx 
0406    88 C4                     mov         ah,al 
0408    88 C2                     mov         dl,al 
040A    30 F6                     xor         dh,dh 
040C    D1 FA                     sar         dx,0x01 
040E    88 D0                     mov         al,dl 
0410    F6 C4 01                  test        ah,0x01 
0413    74 02                     je          L$36 
0415    04 08                     add         al,0x08 
0417                          L$36:
0417    24 0F                     and         al,0x0f 
0419    5A                        pop         dx 
041A    C3                        ret         

Routine Size: 22 bytes,    Routine Base: _TEXT + 0405

041B                          @cvdu_tty_out:
041B    C8 08 00 00               enter       0x0008,0x00 
041F    50                        push        ax 
0420    C6 46 FC 00               mov         byte ptr -0x4[bp],0x00 
0424    88 D0                     mov         al,dl 
0426    30 E4                     xor         ah,ah 
0428    E8 CB FF                  call        amap_ 
042B    88 46 FE                  mov         byte ptr -0x2[bp],al 
042E    C4 1E 00 00               les         bx,dword ptr _bios_data_area_ptr 
0432    26 8B 47 50               mov         ax,word ptr es:0x50[bx] 
0436    89 46 FA                  mov         word ptr -0x6[bp],ax 
0439    8A 46 FB                  mov         al,byte ptr -0x5[bp] 
043C    30 E4                     xor         ah,ah 
043E    6B C0 50                  imul        ax,0x0050 
0441    8A 56 FA                  mov         dl,byte ptr -0x6[bp] 
0444    30 F6                     xor         dh,dh 
0446    89 C3                     mov         bx,ax 
0448    01 D3                     add         bx,dx 
044A    89 5E F8                  mov         word ptr -0x8[bp],bx 
044D    80 7E F6 0D               cmp         byte ptr -0xa[bp],0x0d 
0451    74 17                     je          L$37 
0453    8A 46 F6                  mov         al,byte ptr -0xa[bp] 
0456    3C 0A                     cmp         al,0x0a 
0458    74 18                     je          L$38 
045A    3C 08                     cmp         al,0x08 
045C    75 38                     jne         L$40 
045E    84 D2                     test        dl,dl 
0460    74 4F                     je          L$41 
0462    FF 4E F8                  dec         word ptr -0x8[bp] 
0465    FE 4E FA                  dec         byte ptr -0x6[bp] 
0468    EB 47                     jmp         L$41 
046A                          L$37:
046A    88 76 FA                  mov         byte ptr -0x6[bp],dh 
046D    89 46 F8                  mov         word ptr -0x8[bp],ax 
0470    EB 3F                     jmp         L$41 
0472                          L$38:
0472    FE 46 FB                  inc         byte ptr -0x5[bp] 
0475    80 7E FB 19               cmp         byte ptr -0x5[bp],0x19 
0479    73 06                     jae         L$39 
047B    83 46 F8 50               add         word ptr -0x8[bp],0x0050 
047F    EB 30                     jmp         L$41 
0481                          L$39:
0481    8A 5E FE                  mov         bl,byte ptr -0x2[bp] 
0484    30 FF                     xor         bh,bh 
0486    FE 4E FB                  dec         byte ptr -0x5[bp] 
0489    31 C9                     xor         cx,cx 
048B    BA 4F 18                  mov         dx,0x184f 
048E    B8 01 06                  mov         ax,0x0601 
0491    E8 00 00                  call        Scroll8563_ 
0494    EB 1B                     jmp         L$41 
0496                          L$40:
0496    88 C2                     mov         dl,al 
0498    89 D8                     mov         ax,bx 
049A    E8 00 00                  call        @put_mem 
049D    8A 56 FE                  mov         dl,byte ptr -0x2[bp] 
04A0    30 F6                     xor         dh,dh 
04A2    8B 46 F8                  mov         ax,word ptr -0x8[bp] 
04A5    80 C4 08                  add         ah,0x08 
04A8    E8 00 00                  call        @put_mem 
04AB    FE 46 FA                  inc         byte ptr -0x6[bp] 
04AE    FF 46 F8                  inc         word ptr -0x8[bp] 
04B1                          L$41:
04B1    8A 46 FC                  mov         al,byte ptr -0x4[bp] 
04B4    30 E4                     xor         ah,ah 
04B6    D1 E0                     shl         ax,0x01 
04B8    C4 1E 00 00               les         bx,dword ptr _bios_data_area_ptr 
04BC    01 C3                     add         bx,ax 
04BE    8B 46 FA                  mov         ax,word ptr -0x6[bp] 
04C1    26 89 47 50               mov         word ptr es:0x50[bx],ax 
04C5    8B 56 F8                  mov         dx,word ptr -0x8[bp] 
04C8    C1 EA 08                  shr         dx,0x08 
04CB    30 F6                     xor         dh,dh 
04CD    B8 0E 00                  mov         ax,0x000e 
04D0    E8 00 00                  call        M8563Put_ 
04D3    8A 56 F8                  mov         dl,byte ptr -0x8[bp] 
04D6    30 F6                     xor         dh,dh 
04D8    B8 0F 00                  mov         ax,0x000f 
04DB    E8 00 00                  call        M8563Put_ 
04DE    8B 46 F6                  mov         ax,word ptr -0xa[bp] 
04E1    C9                        leave       
04E2    C3                        ret         

Routine Size: 200 bytes,    Routine Base: _TEXT + 041B

04E3                          set_cursor_pos_:
04E3    53                        push        bx 
04E4    52                        push        dx 
04E5    88 E2                     mov         dl,ah 
04E7    30 F6                     xor         dh,dh 
04E9    6B DA 50                  imul        bx,dx,0x0050 
04EC    30 E4                     xor         ah,ah 
04EE    01 C3                     add         bx,ax 
04F0    89 D8                     mov         ax,bx 
04F2    C1 E8 08                  shr         ax,0x08 
04F5    30 E4                     xor         ah,ah 
04F7    89 C2                     mov         dx,ax 
04F9    B8 0E 00                  mov         ax,0x000e 
04FC    E8 00 00                  call        M8563Put_ 
04FF    88 DA                     mov         dl,bl 
0501    30 F6                     xor         dh,dh 
0503    B8 0F 00                  mov         ax,0x000f 
0506    E8 00 00                  call        M8563Put_ 
0509    5A                        pop         dx 
050A    5B                        pop         bx 
050B    C3                        ret         

Routine Size: 41 bytes,    Routine Base: _TEXT + 04E3

050C                          get_char_and_attribute_:
050C    53                        push        bx 
050D    51                        push        cx 
050E    52                        push        dx 
050F    C4 1E 00 00               les         bx,dword ptr _bios_data_area_ptr 
0513    26 8B 5F 50               mov         bx,word ptr es:0x50[bx] 
0517    88 F8                     mov         al,bh 
0519    30 E4                     xor         ah,ah 
051B    6B C0 50                  imul        ax,0x0050 
051E    30 FF                     xor         bh,bh 
0520    01 C3                     add         bx,ax 
0522    88 FA                     mov         dl,bh 
0524    30 F6                     xor         dh,dh 
0526    B8 12 00                  mov         ax,0x0012 
0529    E8 00 00                  call        M8563Put_ 
052C    88 DA                     mov         dl,bl 
052E    30 F6                     xor         dh,dh 
0530    B8 13 00                  mov         ax,0x0013 
0533    E8 00 00                  call        M8563Put_ 
0536    B8 1F 00                  mov         ax,0x001f 
0539    E8 00 00                  call        M8563Get_ 
053C    88 C1                     mov         cl,al 
053E    88 FA                     mov         dl,bh 
0540    80 C2 08                  add         dl,0x08 
0543    30 F6                     xor         dh,dh 
0545    B8 12 00                  mov         ax,0x0012 
0548    E8 00 00                  call        M8563Put_ 
054B    88 DA                     mov         dl,bl 
054D    30 F6                     xor         dh,dh 
054F    B8 13 00                  mov         ax,0x0013 
0552    E8 00 00                  call        M8563Put_ 
0555    B8 1F 00                  mov         ax,0x001f 
0558    E8 00 00                  call        M8563Get_ 
055B    30 E4                     xor         ah,ah 
055D    E8 00 00                  call        umap_ 
0560    88 C5                     mov         ch,al 
0562    89 C8                     mov         ax,cx 
0564    E9 60 FB                  jmp         L$6 

Routine Size: 91 bytes,    Routine Base: _TEXT + 050C

0567                          blast_characters_:
0567    51                        push        cx 
0568    56                        push        si 
0569    C8 02 00 00               enter       0x0002,0x00 
056D    50                        push        ax 
056E    89 DE                     mov         si,bx 
0570    88 D0                     mov         al,dl 
0572    30 E4                     xor         ah,ah 
0574    E8 7F FE                  call        amap_ 
0577    88 46 FE                  mov         byte ptr -0x2[bp],al 
057A    88 F2                     mov         dl,dh 
057C    30 F6                     xor         dh,dh 
057E    D1 E2                     shl         dx,0x01 
0580    C4 1E 00 00               les         bx,dword ptr _bios_data_area_ptr 
0584    01 D3                     add         bx,dx 
0586    26 8B 4F 50               mov         cx,word ptr es:0x50[bx] 
058A    88 EA                     mov         dl,ch 
058C    30 F6                     xor         dh,dh 
058E    6B D2 50                  imul        dx,0x0050 
0591    30 ED                     xor         ch,ch 
0593    01 D1                     add         cx,dx 
0595    80 7E FD 09               cmp         byte ptr -0x3[bp],0x09 
0599    75 41                     jne         L$45 
059B    80 C5 08                  add         ch,0x08 
059E    83 FE 03                  cmp         si,0x0003 
05A1    76 0D                     jbe         L$42 
05A3    88 C3                     mov         bl,al 
05A5    30 FF                     xor         bh,bh 
05A7    89 F2                     mov         dx,si 
05A9    89 C8                     mov         ax,cx 
05AB    E8 00 00                  call        FillMemory_ 
05AE    EB 28                     jmp         L$44 
05B0                          L$42:
05B0    88 EA                     mov         dl,ch 
05B2    30 F6                     xor         dh,dh 
05B4    B8 12 00                  mov         ax,0x0012 
05B7    E8 00 00                  call        M8563Put_ 
05BA    88 CA                     mov         dl,cl 
05BC    30 F6                     xor         dh,dh 
05BE    B8 13 00                  mov         ax,0x0013 
05C1    E8 00 00                  call        M8563Put_ 
05C4    31 DB                     xor         bx,bx 
05C6                          L$43:
05C6    39 F3                     cmp         bx,si 
05C8    73 0E                     jae         L$44 
05CA    8A 56 FE                  mov         dl,byte ptr -0x2[bp] 
05CD    30 F6                     xor         dh,dh 
05CF    B8 1F 00                  mov         ax,0x001f 
05D2    E8 00 00                  call        M8563Put_ 
05D5    43                        inc         bx 
05D6    EB EE                     jmp         L$43 
05D8                          L$44:
05D8    81 E9 00 08               sub         cx,0x0800 
05DC                          L$45:
05DC    83 FE 03                  cmp         si,0x0003 
05DF    76 0E                     jbe         L$46 
05E1    8A 5E FC                  mov         bl,byte ptr -0x4[bp] 
05E4    30 FF                     xor         bh,bh 
05E6    89 F2                     mov         dx,si 
05E8    89 C8                     mov         ax,cx 
05EA    E8 00 00                  call        FillMemory_ 
05ED    EB 28                     jmp         L$48 
05EF                          L$46:
05EF    88 EA                     mov         dl,ch 
05F1    30 F6                     xor         dh,dh 
05F3    B8 12 00                  mov         ax,0x0012 
05F6    E8 00 00                  call        M8563Put_ 
05F9    88 CA                     mov         dl,cl 
05FB    30 F6                     xor         dh,dh 
05FD    B8 13 00                  mov         ax,0x0013 
0600    E8 00 00                  call        M8563Put_ 
0603    31 DB                     xor         bx,bx 
0605                          L$47:
0605    39 F3                     cmp         bx,si 
0607    73 0E                     jae         L$48 
0609    8A 56 FC                  mov         dl,byte ptr -0x4[bp] 
060C    30 F6                     xor         dh,dh 
060E    B8 1F 00                  mov         ax,0x001f 
0611    E8 00 00                  call        M8563Put_ 
0614    43                        inc         bx 
0615    EB EE                     jmp         L$47 
0617                          L$48:
0617    C9                        leave       
0618    5E                        pop         si 
0619    59                        pop         cx 
061A    C3                        ret         

Routine Size: 180 bytes,    Routine Base: _TEXT + 0567

061B                          SetMemSize8563_:
061B    53                        push        bx 
061C    52                        push        dx 
061D    88 C2                     mov         dl,al 
061F    B3 10                     mov         bl,0x10 
0621    B8 1C 00                  mov         ax,0x001c 
0624    E8 00 00                  call        M8563Get_ 
0627    84 D8                     test        al,bl 
0629    74 02                     je          L$49 
062B    B3 40                     mov         bl,0x40 
062D                          L$49:
062D    80 FA 40                  cmp         dl,0x40 
0630    75 04                     jne         L$50 
0632    0C 10                     or          al,0x10 
0634    EB 07                     jmp         L$51 
0636                          L$50:
0636    80 FA 10                  cmp         dl,0x10 
0639    75 02                     jne         L$51 
063B    24 EF                     and         al,0xef 
063D                          L$51:
063D    88 C2                     mov         dl,al 
063F    30 F6                     xor         dh,dh 
0641    B8 1C 00                  mov         ax,0x001c 
0644    E8 00 00                  call        M8563Put_ 
0647    88 D8                     mov         al,bl 
0649    5A                        pop         dx 
064A    5B                        pop         bx 
064B    C3                        ret         

Routine Size: 49 bytes,    Routine Base: _TEXT + 061B

No disassembly errors

Segment: CONST WORD USE16 00000000 bytes

Segment: CONST2 WORD USE16 00000000 bytes

Segment: _DATA WORD USE16 0000003A bytes
0000                          _M8563init:
0000    00 61 01 50 02 57 03 15 04 1A 05 02 06 19 07 1A .a.P.W..........
0010    08 00 22 06 23 56 24 03 09 0D 17 0D 0A 4C 0B 0D ..".#V$......L..
0020    16 89 19 48 1A 40 1B 00 1C 30 1D 0D 14 08 15 00 ...H.@...0......
0030    0C 00 0D 00 18 20 0E 00 0F 00                   ..... ....

